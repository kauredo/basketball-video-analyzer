name: Build Basketball Video Analyzer

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: |
          npm ci
          # Force install consistent Electron Forge versions
          npm install --save-dev @electron-forge/maker-dmg@^7.8.1

      - name: Debug Electron Forge config
        run: |
          echo "Node version:"
          node --version
          echo "NPM version:"
          npm --version
          echo "Electron Forge version:"
          npx electron-forge --version
          echo "Config check:"
          node -e "console.log(JSON.stringify(require('./forge.config.js'), null, 2))"

      - name: Build for macOS
        if: matrix.os == 'macos-latest'
        run: npm run make -- --platform=darwin
        env:
          # Disable all code signing and notarization
          CSC_IDENTITY_AUTO_DISCOVERY: false
          CSC_LINK: ""
          CSC_KEY_PASSWORD: ""
          APPLE_ID: ""
          APPLE_ID_PASSWORD: ""
          APPLE_TEAM_ID: ""

      - name: Build for Windows
        if: matrix.os == 'windows-latest'
        run: npm run make -- --platform=win32

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: basketball-video-analyzer-mac
          path: |
            out/make/**/*.dmg
            out/make/**/*.zip
          retention-days: 30

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: basketball-video-analyzer-windows
          path: |
            out/make/**/*.exe
            out/make/**/*.msi
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -la

      # Optional: Create a release if you want automatic releases
      # - name: Create Release
      #   uses: softprops/action-gh-release@v1
      #   if: startsWith(github.ref, 'refs/tags/')
      #   with:
      #     files: |
      #       basketball-video-analyzer-mac/**/*
      #       basketball-video-analyzer-windows/**/*
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
